###########################################################
how to start:
nginx.conf:
http{
    ...	
    server {
        listen       8008;
        server_name  localhost;

        location /one {
            alias /home/aplian/webrtc_demo/one-to-one/web/;
            index  index.html index.htm;
        }
    }
    
    server {
        listen                      4443 ssl;
        server_name                 localhost;
    
        ssl_protocols               SSLv3 TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers   on; 
        ssl_ciphers                 ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
        ssl_certificate             /usr/local/nginx/cert2/caroot/cacert.pem;
        ssl_certificate_key         /usr/local/nginx/cert2/private.key;

        location / { 
            root   html;
            index  index.html index.htm;
        }   

        location /one {
            proxy_pass http://127.0.0.1:8008/one;
        }   
    }
	...
}

server:
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
npm install ...

node server.js

client:
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
web:
http:10.10.10.10:8008
https:xxx.xxxx.com:4443/one

ios:
pod install 
打开项目编译运行（需要一部手机）

###########################################################
流程整理:
1.Login:
    登录服务器成功, 初始化本地视频, 并显示.
    --> 登录服务器
    {
        "messageType":"login",
        "userName":"loginName"
    }
2.Call And Offer:
    选择远端用户,
    获取本地offer. 通过服务器转发offer消息给远端用户.
    ----> 发送offer信息给远端用户, 添加到setLocalDescription
    {
        "messageType":"offer",
        "fromUser":"1111",
        "toUser":"2222",
        "offer":Object{...}
    }
3.Answer:
    对方收到offer信息, 创建PeerConnection, 并setRemoteDescription,
    获取本地Answer信息, setLocalDescription
    ----> 返回answer
    {
        "messageType":"answer",
        "fromUser":"2222",
        "toUser":"1111",
        "answer":Object{...}
    }
    <---- 收到对方answer信息, 添加到setRemoteDescription
    ----> 返回answer给对方
    {
        "messageType":"answer",
        "fromUser":"1111",
        "toUser":"2222",
        "answer":Object{...}
    }
4.Candidate:
    candidate信息同offer <----> answer
    <---->
    {
        "messageType":"candidate",
        "fromUser":"1111",
        "toUser":"2222",
        "candidate":Object{...}
    }
5.Leave:
    退出房间,
    关闭PeerConnection连接, 归还视频播放资源
    --> 发给远端用户
    {
        "messageType":"leave",
        "userName":"1111"
    }
    ----> 接收到远端用户数据
    关闭PeerConnection连接, 归还视频播放资源

